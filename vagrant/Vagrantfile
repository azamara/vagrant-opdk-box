# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

vagrant_dir = File.expand_path(File.dirname(__FILE__))

$install_docker = <<SCRIPT
apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list
apt-get update
apt-get install -y docker-engine
SCRIPT

$mirror_docker = <<SCRIPT
cat > /etc/default/docker <<EOF
DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4 --userland-proxy=false --registry-mirror=http://192.168.27.100:4000 --insecure-registry=192.168.27.100:4000"
EOF
service docker restart
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    unless Vagrant.has_plugin?("vagrant-multi-hostsupdater")
      raise 'vagrant-multi-hostsupdater plugin is required for'
      raise 'local server name resolution i.e. cloud9.stackinabox.io'
      raise 'needs to be overriden on the host to point to the'
      raise 'instance running locally.'
      raise ''
      raise 'Install plugin via:'
      raise ''
      raise 'vagrant plugin install vagrant-multi-hostsupdater'
      raise ''
      raise '### NOTE ###'
      raise ''
      raise 'You may be prompted to grant permissions to the vagrant'
      raise 'application to allow us to write to your /etc/hosts file'
      raise 'Please grant the permission. We promise to remove any'
      raise 'entries we create when you shutdown this vagrant environment'
    end

    if Vagrant.has_plugin?("vagrant-vbguest")
      config.vbguest.auto_update = true
    end

    # disabling the default shared /vagrant folder in this vm
    config.vm.synced_folder "..", "/vagrant", type: "nfs", mount_options: ["nolock", "vers=3", "udp"]

    config.vm.define "openstack" do |openstack|

      openstack.vm.box = "stackinabox/openstack"

      # eth1, this will be OpenStacks's "management" network
      openstack.vm.network "private_network", ip: "192.168.27.100", adapter_ip: "192.168.27.1", netmask: "255.255.255.0", auto_config: true

      # eth2, this will be OpenStack's "public" network
      openstack.vm.network "private_network", ip: "172.24.4.225", adapter_ip: "172.24.4.225", netmask: "255.255.255.0", auto_config: false

      #openstack.vm.hostname = "openstack.stackinabox.io"

      openstack.ssh.insert_key = true

      # Copy docker registry credentials
      openstack.vm.provision "file", source: "~/.docker/config.json", destination: "/home/vagrant/.docker/config.json"
      
      # Install docker
      openstack.vm.provision "shell", inline: $install_docker

      # run docker registry mirror first
      openstack.vm.provision "docker" do |d|

          d.run "registry",
            image: "registry:2",
            daemonize: true,
            restart: "always",
            args: "-p 4000:5000 -v /vagrant/scripts/docker/registry:/var/lib/registry -v /vagrant/scripts/docker/config.yml:/etc/docker/registry/config.yml" 

      end

      # configure docker to use local registry mirror
      openstack.vm.provision "shell", inline: $mirror_docker

      openstack.vm.provision "docker" do |d|

          d.run "patterns_db",
            image: "postgres:latest",
            daemonize: true,
            restart: "always",
            args: "-e POSTGRES_PASSWORD=aWJtX3VjZHAK -e POSTGRES_USER=ibm_ucdp -e POSTGRES_DATABASE=ibm_ucdp"

          d.run "urbancode_deploy",
            image: "stackinabox/urbancode-deploy:6.2.1.0.ifix01.772195",
            daemonize: true,
            restart: "always",
            args: "-e LICENSE=accept -p 7918:7918 -p 8080:8080 -p 8443:8443"

          d.run "urbancode_patterns_engine",
            image: "stackinabox/urbancode-patterns-engine:6.2.1.0.748802",
            daemonize: true,
            restart: "always",
            args: "-e PUBLIC_HOSTNAME=192.168.27.100 -e ALLOWED_AUTH_URIS=http://192.168.27.100:5000/v2.0 -p 7000:8000 -p 7003:8003 -p 7004:8004"

          d.run "urbancode_patterns_designer",
            image: "stackinabox/urbancode-patterns-designer:6.2.1.0.748638",
            daemonize: true,
            restart: "always",
            args: "--link patterns_db:database --link urbancode_patterns_engine:engine --link urbancode_deploy:deploy -e WEB_SERVER_HOSTNAME=designer.stackinabox.io -e KEYSTONE_URL=devstack.stackinabox.io -p 9080:9080 -p 9443:9443 -p 7575:7575"

      end

      openstack.vm.provider :virtualbox do |vb|
          # vb.gui = true
          # Use VBoxManage to customize the VM.
          vb.customize ["modifyvm", :id, "--ioapic", "on"] # turn on I/O APIC
          vb.customize ["modifyvm", :id, "--cpus", "4"] # set number of vcpus
          vb.customize ["modifyvm", :id, "--memory", "8192"] # set amount of memory allocated vm memory
          vb.customize ["modifyvm", :id, "--hwvirtex", "on"] # turn on host hardware virtualization extensions (VT-x|AMD-V)
          vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"] # set guest OS type
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"] # enables DNS resolution from guest using host's DNS
          vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"] # turn on promiscuous mode on nic 3
          vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype3", "virtio"]
          vb.customize ["modifyvm", :id, "--longmode", "on"] # enables long mode (64 bit mode in GUEST OS)
          vb.customize ["modifyvm", :id, "--hpet", "on"] # enables a High Precision Event Timer (HPET)
          vb.customize ["modifyvm", :id, "--nestedpaging", "on"] # if --hwvirtex is on, this enables nested paging
          vb.customize ["modifyvm", :id, "--largepages", "on"] # if --hwvirtex & --nestedpaging are on
          vb.customize ["modifyvm", :id, "--vtxvpid", "on"] # if --hwvirtex on
          vb.customize ["modifyvm", :id, "--vtxux", "on"] # if --vtux on (Intel VT-x only) enables unrestricted guest mode
          vb.customize ["modifyvm", :id, "--boot1", "disk"] # tells vm to boot from disk only
          vb.customize ["modifyvm", :id, "--audio", "none"]
          vb.customize ["modifyvm", :id, "--clipboard", "disabled"]
          vb.customize ["modifyvm", :id, "--usbehci", "off"]
          vb.customize ["modifyvm", :id, "--vrde", "off"]
      end

    end

    config.multihostsupdater.aliases = {'192.168.27.100' => ['openstack.stackinabox.io', 'docker.stackinabox.io', 'heat.stackinabox.io', 'designer.stackinabox.io', 'ucd.stackinabox.io']}

end
