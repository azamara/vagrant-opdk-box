# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    if Vagrant.has_plugin?("vagrant-vbguest")
      config.vbguest.auto_update = false
    end

    config.vm.define "devstack" do |devstack|

      devstack.vm.box = "devstack"
      devstack.vm.box_url = "https://stackinabox-vagrant-boxes.bintray.io/devstack"
      devstack.vm.host_name = "devstack"

      # eth1, this will be OpenStacks's "management" network
      devstack.vm.network "private_network", ip: "192.168.27.100", adapter_ip: "192.168.27.1", netmask: "255.255.255.0", auto_config: true

      # eth2, this will be OpenStack's "public" network
      devstack.vm.network "private_network", ip: "172.24.4.225", adapter_ip: "172.24.4.225", netmask: "255.255.255.0", auto_config: false

      devstack.ssh.insert_key = true

      devstack.vm.provider :virtualbox do |vb|
          # vb.gui = true
          # Use VBoxManage to customize the VM.
          vb.customize ["modifyvm", :id, "--ioapic", "on"] # turn on I/O APIC
          vb.customize ["modifyvm", :id, "--cpus", "4"] # set number of vcpus
          vb.customize ["modifyvm", :id, "--memory", "8192"] # set amount of memory allocated vm memory
          vb.customize ["modifyvm", :id, "--hwvirtex", "on"] # turn on host hardware virtualization extensions (VT-x|AMD-V)
          vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"] # set guest OS type
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"] # enables DNS resolution from guest using host's DNS
          vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"] # turn on promiscuous mode on nic 3
          vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype3", "virtio"]
          vb.customize ["modifyvm", :id, "--longmode", "on"] # enables long mode (64 bit mode in GUEST OS)
          vb.customize ["modifyvm", :id, "--hpet", "on"] # enables a High Precision Event Timer (HPET)
          vb.customize ["modifyvm", :id, "--nestedpaging", "on"] # if --hwvirtex is on, this enables nested paging
          vb.customize ["modifyvm", :id, "--largepages", "on"] # if --hwvirtex & --nestedpaging are on
          vb.customize ["modifyvm", :id, "--vtxvpid", "on"] # if --hwvirtex on
          vb.customize ["modifyvm", :id, "--vtxux", "on"] # if --vtux on (Intel VT-x only) enables unrestricted guest mode
          vb.customize ["modifyvm", :id, "--boot1", "disk"] # tells vm to boot from disk only
          vb.customize ["modifyvm", :id, "--audio", "none"]
          vb.customize ["modifyvm", :id, "--clipboard", "disabled"]
          vb.customize ["modifyvm", :id, "--usbehci", "off"]
          vb.customize ["modifyvm", :id, "--vrde", "off"]
      end

    end

    config.vm.define "docker" do |docker|

      docker.vm.box = "hashicorp/boot2docker"
      docker.vm.host_name = "docker"

      # eth1, this will be dockers "management" network
      docker.vm.network "private_network", ip: "192.168.99.100", adapter_ip: "192.168.99.1", netmask: "255.255.255.0", auto_config: true

      docker.ssh.username = "docker"
      docker.ssh.password = "tcuser"
      docker.ssh.insert_key = true

      docker.vm.provider :virtualbox do |vb|
          # vb.gui = true
          # Use VBoxManage to customize the VM.
          vb.customize ["modifyvm", :id, "--ioapic", "on"] # turn on I/O APIC
          vb.customize ["modifyvm", :id, "--cpus", "2"] # set number of vcpus
          vb.customize ["modifyvm", :id, "--memory", "2048"] # set amount of memory allocated vm memory
          vb.customize ["modifyvm", :id, "--hwvirtex", "on"] # turn on host hardware virtualization extensions (VT-x|AMD-V)
          vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"] # set guest OS type
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"] # enables DNS resolution from guest using host's DNS
          vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"] # turn on promiscuous mode on nic 3
          vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
          vb.customize ["modifyvm", :id, "--longmode", "on"] # enables long mode (64 bit mode in GUEST OS)
          vb.customize ["modifyvm", :id, "--hpet", "on"] # enables a High Precision Event Timer (HPET)
          vb.customize ["modifyvm", :id, "--nestedpaging", "on"] # if --hwvirtex is on, this enables nested paging
          vb.customize ["modifyvm", :id, "--largepages", "on"] # if --hwvirtex & --nestedpaging are on
          vb.customize ["modifyvm", :id, "--vtxvpid", "on"] # if --hwvirtex on
          vb.customize ["modifyvm", :id, "--vtxux", "on"] # if --vtux on (Intel VT-x only) enables unrestricted guest mode
          vb.customize ["modifyvm", :id, "--audio", "none"]
          vb.customize ["modifyvm", :id, "--clipboard", "disabled"]
          vb.customize ["modifyvm", :id, "--usbehci", "off"]
          vb.customize ["modifyvm", :id, "--vrde", "off"]
      end

      # Copy docker registry credentials
      docker.vm.provision "file", source: "~/.docker/config.json", destination: "/root/.docker/config.json"

      docker.vm.provision "docker" do |d|

          d.pull_images "postgres:latest"
          d.pull_images "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-deploy:6.2.0.2.723274"
          d.pull_images "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-patterns-engine:6.2.1.0.753496"
          d.pull_images "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-patterns-designer:6.2.1.0.753591"

          d.run "patterns_db",
            image: "postgres:latest",
            daemonize: true,
            restart: "always",
            args: "-e POSTGRES_PASSWORD=aWJtX3VjZHAK -e POSTGRES_USER=ibm_ucdp -e POSTGRES_DATABASE=ibm_ucdp"

          d.run "urbancode_deploy",
            image: "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-deploy:6.2.0.2.723274",
            daemonize: true,
            restart: "always",
            args: "-e LICENSE=accept -p 7918:7918 -p 8080:8080 -p 8443:8443"

          d.run "urbancode_patterns_engine",
            image: "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-patterns-engine:6.2.1.0.753496",
            daemonize: true,
            restart: "always",
            args: "-e PUBLIC_HOSTNAME=192.168.99.100 -e ALLOWED_AUTH_URIS=http://192.168.27.100:5000/v2.0 -p 8000:8000 -p 8003:8003 -p 8004:8004"

          d.run "urbancode_patterns_designer",
            image: "stackinabox-docker-registry.bintray.io/stackinabox/urbancode-patterns-designer:6.2.1.0.753591",
            daemonize: true,
            restart: "always",
            args: "--link patterns_db:database --link urbancode_patterns_engine:engine --link urbancode_deploy:deploy -e WEB_SERVER_HOSTNAME=192.168.99.100 -e KEYSTONE_URL=192.168.27.100 -p 9080:9080 -p 9443:9443 -p 7575:7575"
      end

    end
end
