# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.8"

vagrant_dir = File.expand_path(File.dirname(__FILE__))
personalization = File.expand_path(File.join(vagrant_dir, "Personalization"), __FILE__)
if not File.exist?(personalization)
  FileUtils.cp(File.expand_path(File.join(vagrant_dir, "Personalization.dist"), __FILE__), personalization)
end
load personalization

$killheat = <<SCRIPT
sed -i 's|/usr/local/bin/heat-engine|# /usr/local/bin/heat-engine|g' /opt/stack/devstack/stack-noscreenrc
sed -i 's|/usr/local/bin/heat-api|# /usr/local/bin/heat-api|g' /opt/stack/devstack/stack-noscreenrc
sed -i 's|/usr/local/bin/heat-api-cfn|# /usr/local/bin/heat-api-cfn|g' /opt/stack/devstack/stack-noscreenrc
sed -i 's|/usr/local/bin/heat-api-cloudwatch|# /usr/local/bin/heat-api-cloudwatch|g' /opt/stack/devstack/stack-noscreenrc

ps -o pid,args -e | grep -e /usr/local/bin/heat-api-cloudwatch \
   -e /usr/local/bin/heat-api-cfn \
   -e /usr/local/bin/heat-api \
   -e /usr/local/bin/heat-engine | \
   grep -v 'grep' | \
   awk '{print "kill -9 " $1}' | \
   sh

sleep 30
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    if Vagrant.has_plugin?("vagrant-cachier")

       # cache at the base box level
       config.cache.scope = :box

       # if $use_nfs
       #   config.cache.synced_folder_opts = {
       #     type: :nfs,
       #     mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
       #   }
       # end

    else
       print "\n"
       print "vagrant-cachier plugin has not been found.\n"
       print "Please install it by running `vagrant plugin install vagrant-cachier`\n"
       exit 22
    end

    if Vagrant.has_plugin?("vagrant-vbguest")
      config.vbguest.auto_update = false
    end

    # disabling the default shared /vagrant folder in this vm
    config.vm.synced_folder "..", "/vagrant"#, type: "nfs", mount_options: ['rw', 'vers=3', 'tcp', 'nolock']

    config.vm.define "openstack" do |openstack|

      openstack.vm.box = "stackinabox/openstack"
      openstack.vm.box_version = ">= 0.2.3"
#      openstack.vm.box = "stackinabox.box"

      # eth1, this will be OpenStacks's "management" network
      openstack.vm.network "private_network", ip: "192.168.27.100", adapter_ip: "192.168.27.1", netmask: "255.255.255.0", auto_config: true

      # eth2, this will be OpenStack's "public" network
      openstack.vm.network "private_network", ip: "172.24.4.225", adapter_ip: "172.24.4.225", netmask: "255.255.255.0", auto_config: false

      #openstack.vm.hostname = "openstack.stackinabox.io"

      openstack.ssh.insert_key = true

      # kill the heat engine that's running on the host
      # this is a point in time solution until we get liberty compatible heat plugins
      openstack.vm.provision "shell", inline: $killheat

      # install bluebox or openstack theme based on environment variable os_theme setting in Personalization file
      openstack.vm.provision "shell", name: "install-theme", path: "../scripts/#{$os_theme}-theme/init.sh"

      # Copy docker registry credentials if they exist
	  if File.exist?(File.expand_path(File.join("~/.docker", "config.json"), __FILE__))
      	openstack.vm.provision "file", source: "~/.docker/config.json", destination: "/home/vagrant/.docker/config.json"
      end

      if Vagrant.has_plugin?("vagrant-docker-compose")
        openstack.vm.provision :docker
        openstack.vm.provision :docker_compose, 
      	  yml: "/vagrant/scripts/docker/compose.yml",
          command_options: { up: "-d --timeout 10"}, 
          run: "always",
          project_name: "urbancode",
          compose_version: "1.8.0"
      else
      	print "\n"
        print "vagrant-docker-compose plugin has not been found.\n"
        print "Please install it by running `vagrant plugin install vagrant-docker-compose`\n"
        exit 22
      end

      openstack.vm.provider :virtualbox do |vb|
          # vb.gui = true

          #vb.linked_clone = true# if Vagrant::VERSION =~ /^1.8/
          
          # Use VBoxManage to customize the VM.
          vb.customize ["modifyvm", :id, "--ioapic", "on"] # turn on I/O APIC
          vb.customize ["modifyvm", :id, "--cpus", "#{$cpus}"] # set number of vcpus
          vb.customize ["modifyvm", :id, "--memory", "#{$memory}"] # set amount of memory allocated vm memory
          vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"] # set guest OS type
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"] # enables DNS resolution from guest using host's DNS
          vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"] # turn on promiscuous mode on nic 3
          vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
          vb.customize ["modifyvm", :id, "--nictype3", "virtio"]
          vb.customize ["modifyvm", :id, "--pae", "on"] # enables PAE
          vb.customize ["modifyvm", :id, "--longmode", "on"] # enables long mode (64 bit mode in GUEST OS)
          vb.customize ["modifyvm", :id, "--hpet", "on"] # enables a High Precision Event Timer (HPET)
          vb.customize ["modifyvm", :id, "--hwvirtex", "on"] # turn on host hardware virtualization extensions (VT-x|AMD-V)
          vb.customize ["modifyvm", :id, "--nestedpaging", "on"] # if --hwvirtex is on, this enables nested paging
          vb.customize ["modifyvm", :id, "--largepages", "on"] # if --hwvirtex & --nestedpaging are on
          vb.customize ["modifyvm", :id, "--vtxvpid", "on"] # if --hwvirtex on
          vb.customize ["modifyvm", :id, "--vtxux", "on"] # if --vtux on (Intel VT-x only) enables unrestricted guest mode
          vb.customize ["modifyvm", :id, "--boot1", "disk"] # tells vm to boot from disk only
          vb.customize ["modifyvm", :id, "--rtcuseutc", "on"] # lets the real-time clock (RTC) operate in UTC time
          vb.customize ["modifyvm", :id, "--audio", "none"]
          vb.customize ["modifyvm", :id, "--clipboard", "disabled"]
          vb.customize ["modifyvm", :id, "--usbehci", "off"]
          vb.customize ["modifyvm", :id, "--vrde", "off"]
      end

      # install bluebox or openstack theme based on environment variable os_theme setting in Personalization file
      openstack.vm.provision "shell", name: "init-aio", path: "../scripts/aio/init.sh"

    end

    if Vagrant.has_plugin?("vagrant-multi-hostsupdater")
      config.multihostsupdater.aliases = {'192.168.27.100' => ['openstack.stackinabox.io', 'bluebox.stackinabox.io', 'docker.stackinabox.io', 'heat.stackinabox.io', 'designer.stackinabox.io', 'ucd.stackinabox.io', 'registry.stackinabox.io', 'docker.stackinabox.io', 'agent.stackinabox.io', 'blueprintdb.stackinabox.io']}
    else
        print "\n"
        print "vagrant-multi-hostsupdater plugin has not been found.\n"
        print "Please install it by running `vagrant plugin install vagrant-multi-hostsupdater`\n"
        exit 22
    end

end
